{
  "_args": [
    [
      {
        "raw": "base-x@^3.0.2",
        "scope": null,
        "escapedName": "base-x",
        "name": "base-x",
        "rawSpec": "^3.0.2",
        "spec": ">=3.0.2 <4.0.0",
        "type": "range"
      },
      "/Users/sandeepghosh/Desktop/blockchain/smart contracts/dappRoll2Win/dumed/node_modules/bs58"
    ]
  ],
  "_from": "base-x@^3.0.2",
  "_hasShrinkwrap": false,
  "_id": "base-x@3.0.5",
  "_location": "/base-x",
  "_nodeVersion": "11.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/base-x_3.0.5_1541120108559_0.055720012241996075"
  },
  "_npmUser": {
    "name": "dcousens",
    "email": "npm@dcousens.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "base-x@^3.0.2",
    "scope": null,
    "escapedName": "base-x",
    "name": "base-x",
    "rawSpec": "^3.0.2",
    "spec": ">=3.0.2 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/bs58"
  ],
  "_resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.5.tgz",
  "_shasum": "d3ada59afed05b921ab581ec3112e6444ba0795a",
  "_shrinkwrap": null,
  "_spec": "base-x@^3.0.2",
  "_where": "/Users/sandeepghosh/Desktop/blockchain/smart contracts/dappRoll2Win/dumed/node_modules/bs58",
  "author": {
    "name": "Daniel Cousens"
  },
  "bugs": {
    "url": "https://github.com/cryptocoinjs/base-x/issues"
  },
  "dependencies": {
    "safe-buffer": "^5.0.1"
  },
  "description": "Fast base encoding / decoding of any given alphabet",
  "devDependencies": {
    "standard": "^10.0.3",
    "tape": "^4.5.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-C3picSgzPSLE+jW3tcBzJoGwitOtazb5B+5YmAxZm2ybmTi9LNgAtDO/jjVEBZwHoXmDBZ9m/IELj3elJVRBcA==",
    "shasum": "d3ada59afed05b921ab581ec3112e6444ba0795a",
    "tarball": "https://registry.npmjs.org/base-x/-/base-x-3.0.5.tgz",
    "fileCount": 4,
    "unpackedSize": 8550,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb26BtCRA9TVsSAnZWagAA3fkP+wWZrSn2rM3EMRMG8xZ/\noQTWRtL76BUfhfdsE6zz+DmtPlZHiqZcSKwdNCsQtTGChNE470bow65d/9BZ\nRVIg+gG3EvYg5o2yMfnHGqwf5lXk1fMvoj1lxVmQLt/GPRnZcsylIAb8Ai6z\n/pTSvGY3Qq1QnhY/hoDfmgo8uviKS3kmGBSb0Spyz0UX34RnvIoZSQh+z3+5\nLTBrHQucI8Kj/nG4uKisj+tAJjvFbYea97LIUPsUIfXeVOlHAG0n3DGzeJDl\nhgiJyLVcJ9DQh0PemhUgh7NgODNBTTFhvtscPdJz7z+M/CmylMiDvkahUBdC\nn+qEfICcXPvWzuFo+t/jVanwXAGDTSpI54qqPv86shigmMSTtNXaUkmnfvdq\n/BXMNbYv5SmoqtvekCr1XOWpofi/FHw8zDvKnx8fc/eCZm91dRMD9rqqdhjK\n6/FfwHNTu7eZvAnSwk+mDdzaztHgTpoBVFlJvDpUhNQIJBZLRmub1UVw4MwV\nIm+xQMxi1esVRhFCcmRSDg3a+JMGE4qNyBrRu9bG2vSMIvAiRXrUlpRLQp0m\nqJCfv80DHZn8vBrWS+BhrPm00+QOFbtAoDWsYXZ+bhT96pawxtwiw5FANvwQ\nI1doYJsrQb6D39ThVG5PbevuRXL3uZyInLphE3U1A2yqH+XbyObrLeMe+Lai\n/+ZU\r\n=PHZc\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "6581d38fe23cb41faaf72cf1ad498ee0080cd528",
  "homepage": "https://github.com/cryptocoinjs/base-x",
  "keywords": [
    "base-x",
    "base58",
    "base62",
    "base64",
    "crypto",
    "crytography",
    "decode",
    "decoding",
    "encode",
    "encoding"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "dcousens",
      "email": "npm@dcousens.com"
    },
    {
      "name": "fanatid",
      "email": "fanatid@ya.ru"
    },
    {
      "name": "jprichardson",
      "email": "jprichardson@gmail.com"
    }
  ],
  "name": "base-x",
  "optionalDependencies": {},
  "readme": "# base-x\n\n[![NPM Package](https://img.shields.io/npm/v/base-x.svg?style=flat-square)](https://www.npmjs.org/package/base-x)\n[![Build Status](https://img.shields.io/travis/cryptocoinjs/base-x.svg?branch=master&style=flat-square)](https://travis-ci.org/cryptocoinjs/base-x)\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\nFast base encoding / decoding of any given alphabet using bitcoin style leading\nzero compression.\n\n## Example\n\nBase58\n\n``` javascript\nvar BASE58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\nvar bs58 = require('base-x')(BASE58)\n\nvar decoded = bs58.decode('5Kd3NBUAdUnhyzenEwVLy9pBKxSwXvE9FMPyR4UKZvpe6E3AgLr')\n\nconsole.log(decoded)\n// => <Buffer 80 ed db dc 11 68 f1 da ea db d3 e4 4c 1e 3f 8f 5a 28 4c 20 29 f7 8a d2 6a f9 85 83 a4 99 de 5b 19>\n\nconsole.log(bs58.encode(decoded))\n// => 5Kd3NBUAdUnhyzenEwVLy9pBKxSwXvE9FMPyR4UKZvpe6E3AgLr\n```\n\n### Alphabets\n\nSee below for a list of commonly recognized alphabets, and their respective base.\n\nBase | Alphabet\n------------- | -------------\n2 | `01`\n8 | `01234567`\n11 | `0123456789a`\n16 | `0123456789abcdef`\n32 | `0123456789ABCDEFGHJKMNPQRSTVWXYZ`\n36 | `0123456789abcdefghijklmnopqrstuvwxyz`\n58 | `123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz`\n62 | `0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`\n64 | `ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/`\n66 | `ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.!~`\n\n\n## How it works\n\nIt encodes octet arrays by doing long divisions on all significant digits in the\narray, creating a representation of that number in the new base. Then for every\nleading zero in the input (not significant as a number) it will encode as a\nsingle leader character. This is the first in the alphabet and will decode as 8\nbits. The other characters depend upon the base. For example, a base58 alphabet\npacks roughly 5.858 bits per character.\n\nThis means the encoded string 000f (using a base16, 0-f alphabet) will actually decode\nto 4 bytes unlike a canonical hex encoding which uniformly packs 4 bits into each\ncharacter.\n\nWhile unusual, this does mean that no padding is required and it works for bases\nlike 43. **If you need standard hex encoding, or base64 encoding, this module is NOT\nappropriate.**\n\n\n## LICENSE [MIT](LICENSE)\nA direct derivation of the base58 implementation from [`bitcoin/bitcoin`](https://github.com/bitcoin/bitcoin/blob/f1e2f2a85962c1664e4e55471061af0eaa798d40/src/base58.cpp),  generalized for variable length alphabets.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cryptocoinjs/base-x.git"
  },
  "scripts": {
    "standard": "standard",
    "test": "npm run unit && npm run standard",
    "unit": "tape test/*.js"
  },
  "version": "3.0.5"
}
