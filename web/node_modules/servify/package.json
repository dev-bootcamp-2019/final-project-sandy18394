{
  "_args": [
    [
      {
        "raw": "servify@^0.1.12",
        "scope": null,
        "escapedName": "servify",
        "name": "servify",
        "rawSpec": "^0.1.12",
        "spec": ">=0.1.12 <0.2.0",
        "type": "range"
      },
      "/Users/sandeepghosh/Desktop/blockchain/smart contracts/dappRoll2Win/dumed/node_modules/eth-lib"
    ]
  ],
  "_from": "servify@>=0.1.12 <0.2.0",
  "_id": "servify@0.1.12",
  "_inCache": true,
  "_location": "/servify",
  "_nodeVersion": "8.1.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/servify-0.1.12.tgz_1501744931615_0.42591595998965204"
  },
  "_npmUser": {
    "name": "maiavictor",
    "email": "srvictormaia@gmail.com"
  },
  "_npmVersion": "5.0.3",
  "_phantomChildren": {
    "ajv": "6.7.0",
    "asynckit": "0.4.0",
    "delayed-stream": "1.0.0",
    "forever-agent": "0.6.1",
    "har-schema": "2.0.0",
    "is-typedarray": "1.0.0",
    "isstream": "0.1.2",
    "json-stringify-safe": "5.0.1",
    "jsprim": "1.3.0",
    "media-typer": "0.3.0",
    "on-finished": "2.3.0",
    "performance-now": "2.1.0",
    "psl": "1.1.31",
    "safe-buffer": "5.1.2",
    "safer-buffer": "2.1.2",
    "sshpk": "1.9.2",
    "unpipe": "1.0.0"
  },
  "_requested": {
    "raw": "servify@^0.1.12",
    "scope": null,
    "escapedName": "servify",
    "name": "servify",
    "rawSpec": "^0.1.12",
    "spec": ">=0.1.12 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/eth-lib"
  ],
  "_resolved": "https://registry.npmjs.org/servify/-/servify-0.1.12.tgz",
  "_shasum": "142ab7bee1f1d033b66d0707086085b17c06db95",
  "_shrinkwrap": null,
  "_spec": "servify@^0.1.12",
  "_where": "/Users/sandeepghosh/Desktop/blockchain/smart contracts/dappRoll2Win/dumed/node_modules/eth-lib",
  "author": {
    "name": "MaiaVictor"
  },
  "browser": "servify-browser.js",
  "bugs": {
    "url": "https://github.com/maiavictor/servify/issues"
  },
  "dependencies": {
    "body-parser": "^1.16.0",
    "cors": "^2.8.1",
    "express": "^4.14.0",
    "request": "^2.79.0",
    "xhr": "^2.3.3"
  },
  "description": "Microservices the simplest way conceivable.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-/xE6GvsKKqyo1BAY+KxOWXcLpPsUUyji7Qg3bVD7hh1eRze5bR1uYiuDA/k3Gof1s9BTzQZEJK8sNcNGFIzeWw==",
    "shasum": "142ab7bee1f1d033b66d0707086085b17c06db95",
    "tarball": "https://registry.npmjs.org/servify/-/servify-0.1.12.tgz"
  },
  "engines": {
    "node": ">=6"
  },
  "gitHead": "0426028b73087b405556236e94917544c592ef1e",
  "homepage": "https://github.com/maiavictor/servify#readme",
  "license": "MIT",
  "main": "servify-node.js",
  "maintainers": [
    {
      "name": "maiavictor",
      "email": "srvictormaia@gmail.com"
    }
  ],
  "name": "servify",
  "optionalDependencies": {},
  "readme": "## Servify\n\nMicroservices the simplest way conceivable.\n\n## Usage\n\n### Create a microservice:\n\n```javascript\nconst servify = require(\"servify\");\n\n// The service state\nlet count = 0;\n\n// Starts a microservice with 3 API methods\nservify.api(3000, {\n\n    // Squares a number\n    square: (x) => x * x,\n\n    // Concats two arrays\n    concat: (a, b) => a.concat(b),\n\n    // Increments and returns the counter\n    count: () => count++\n\n}).then(() => console.log(\"servified port 3000\"))\n```\n\n### Call a microservice from code:\n\n```javascript\nconst servify = require(\"servify\");\n\n// Builds the API interface from an URL\nconst api = servify.at(\"http://localhost:3000\");\n\n// Calls API methods like normal lib functions\napi.square(2)\n    .then(x => console.log(x));\n\napi.concat([1,2], [3,4])\n    .then(arr => console.log(arr));\n\napi.count()\n    .then(i => console.log(i));\n```\n\n### Call a microservice from the browser / request:\n\n```javascript\nJust access the url followed by a function call:\n\nhttp://localhost:3000/square(2)\nhttp://localhost:3000/concat([1,2], [3,4])\nhttp://localhost:3000/count()\n```\n\n## Support\n\nThis requires ES6 Proxy support, so you need node.js 6 and up. Proxies cannot be polyfilled in earlier versions.\n\n## Why\n\nWhen all you want is to create a microservice, [Express.js](http://expressjs.com) becomes annoyingly verbose. You have to worry about things like serializing/deserializing JSON, chosing how to format query/param inputs, picking a XHR lib on the client and so on. Servify is a ridiculously thin (50 LOC) lib that just standardizes that boring stuff. To create a microservice, all you need is an object of functions specifying your API. To interact with a service, all you need is its URL. You can then call its functions exactly like you would call a normal lib (except it returns a Promise, obviously).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/maiavictor/servify.git"
  },
  "scripts": {
    "build": "browserify servify.js > dist/servify.bundle.js; ccjs dist/servify.bundle.js > dist/servify.min.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.1.12"
}
