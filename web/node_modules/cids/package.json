{
  "_args": [
    [
      {
        "raw": "cids@~0.5.5",
        "scope": null,
        "escapedName": "cids",
        "name": "cids",
        "rawSpec": "~0.5.5",
        "spec": ">=0.5.5 <0.6.0",
        "type": "range"
      },
      "/Users/sandeepghosh/Desktop/blockchain/smart contracts/dappRoll2Win/dumed/node_modules/ipfs-api"
    ]
  ],
  "_from": "cids@~0.5.5",
  "_hasShrinkwrap": false,
  "_id": "cids@0.5.7",
  "_location": "/cids",
  "_nodeVersion": "10.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/cids_0.5.7_1544137603736_0.3827984858241309"
  },
  "_npmUser": {
    "name": "vmx",
    "email": "volker.mische@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {
    "safe-buffer": "5.1.2"
  },
  "_requested": {
    "raw": "cids@~0.5.5",
    "scope": null,
    "escapedName": "cids",
    "name": "cids",
    "rawSpec": "~0.5.5",
    "spec": ">=0.5.5 <0.6.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ipfs-api",
    "/ipfs-block",
    "/ipld-dag-cbor",
    "/ipld-dag-pb",
    "/is-ipfs"
  ],
  "_resolved": "https://registry.npmjs.org/cids/-/cids-0.5.7.tgz",
  "_shasum": "bc5034bddcb9396fbf1cb60ad5498c976133de53",
  "_shrinkwrap": null,
  "_spec": "cids@~0.5.5",
  "_where": "/Users/sandeepghosh/Desktop/blockchain/smart contracts/dappRoll2Win/dumed/node_modules/ipfs-api",
  "bugs": {
    "url": "https://github.com/multiformats/js-cid/issues"
  },
  "contributors": [
    {
      "name": "Alan Shaw",
      "email": "alan.shaw@protocol.ai"
    },
    {
      "name": "Alan Shaw",
      "email": "alan@tableflip.io"
    },
    {
      "name": "David Dias",
      "email": "daviddias.p@gmail.com"
    },
    {
      "name": "Enrico Marino",
      "email": "enrico.marino@email.com"
    },
    {
      "name": "Friedel Ziegelmayer",
      "email": "dignifiedquire@gmail.com"
    },
    {
      "name": "Mikeal Rogers",
      "email": "mikeal.rogers@gmail.com"
    },
    {
      "name": "Mitar",
      "email": "mitar.github@tnode.com"
    },
    {
      "name": "Real Harry",
      "email": "sidewaybot@gmail.com"
    },
    {
      "name": "Richard Littauer",
      "email": "richard.littauer@gmail.com"
    },
    {
      "name": "Victor Bjelkholm",
      "email": "victorbjelkholm@gmail.com"
    },
    {
      "name": "Volker Mische",
      "email": "volker.mische@gmail.com"
    },
    {
      "name": "greenkeeper[bot]",
      "email": "greenkeeper[bot]@users.noreply.github.com"
    },
    {
      "name": "kumavis",
      "email": "kumavis@users.noreply.github.com"
    }
  ],
  "dependencies": {
    "class-is": "^1.1.0",
    "multibase": "~0.6.0",
    "multicodec": "~0.2.7",
    "multihashes": "~0.4.14"
  },
  "description": "CID Implementation in JavaScript",
  "devDependencies": {
    "aegir": "^17.0.0",
    "chai": "^4.1.2",
    "dirty-chai": "^2.0.1",
    "multihashing": "~0.3.2",
    "multihashing-async": "~0.5.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-SlAz4p8XMEW3mhwiYbzfjn+5+Y//+kIuHqzRUytK0a3uGBnsjJb76xHliehv0HcVMCjRKv2vZnPTwd4QX+IcMA==",
    "shasum": "bc5034bddcb9396fbf1cb60ad5498c976133de53",
    "tarball": "https://registry.npmjs.org/cids/-/cids-0.5.7.tgz",
    "fileCount": 13,
    "unpackedSize": 521005,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcCauECRA9TVsSAnZWagAAzkkP/iT1qbz9Gfkui/nyIDER\nHgzQJluad7ZrViiF4OkVyrETvLf0t/Uvw12XLqWi80hUKi73p/wrnD1SCF3i\nkFgzjqMyq3r1FcrVnoWXtrZXgzFpt05XYGs/lHe9ZttqsKsHDfLBEtXCOS6n\n1tRv7FkETfawcHF/DJ0PQAYpmccgS2M8yXNYqe8yhzFwgnvc56kdKFVQ2rmj\n3/Ojqratlx2WyMjs8NOCi3x7uPHquQvdcoUliTFBnUOyVtyyASQ0KbIweg+S\nfDsi2aWnNN+R7pKEoTJun/myzkmb3PAY7UOPiJEzlyZs0pIxY5WohgEgEDG9\nTaLm9JCX686DEdPIF5KKiPZ85k3kdD1Iy/C3Cw7oEUxVsXE4uMoZmJc93uUq\nsTjAn4p08S0nRAE4n6WYvcSQ1hVu62oo2p/YLiDCWgPrjc87DgTqadXSvfbz\n/CCApj2DmBWdmpudAyGH6xzkaofu3EBp0ROKHMOoyuCpuXR84C3FOk7eUEO9\nQpf7rPkn4dFvt7fQtiER/rOduGrQQlRSH3CnlTGXrpHO5W52O5tkQaalaL9T\n0Rm5AjaZnCQkv1LJFaFq0d5xpqiWHtczPiI+H5lNhV1F+aINPqE96QVXt7gZ\nNfxRT0rjGhV+h3dpOoslAGw7M2fP4v6kQM8eJggWA+YbHDUapStuotF2Rz2M\n2qO1\r\n=ATHk\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4.0.0",
    "npm": ">=3.0.0"
  },
  "gitHead": "22504757cead5e3213d6fd4a385ab546885debe8",
  "homepage": "https://github.com/multiformats/js-cid#readme",
  "keywords": [
    "multihash",
    "cid",
    "ipld"
  ],
  "leadMaintainer": "Volker Mische <volker.mische@gmail.com>",
  "license": "MIT",
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "daviddias",
      "email": "daviddias.p@gmail.com"
    },
    {
      "name": "dignifiedquire",
      "email": "dignifiedquire@gmail.com"
    },
    {
      "name": "vmx",
      "email": "volker.mische@gmail.com"
    }
  ],
  "name": "cids",
  "optionalDependencies": {},
  "pre-push": [
    "lint",
    "test"
  ],
  "readme": "# js-cid\n\n[![](https://img.shields.io/badge/made%20by-Protocol%20Labs-blue.svg?style=flat-square)](http://protocol.ai/)\n[![](https://img.shields.io/badge/freenode-%23ipfs-blue.svg?style=flat-square)](http://webchat.freenode.net/?channels=%23ipfs)\n[![Coverage Status](https://coveralls.io/repos/github/multiformats/js-cid/badge.svg?branch=master)](https://coveralls.io/github/multiformats/js-cid?branch=master)\n[![Dependency Status](https://david-dm.org/multiformats/js-cid.svg?style=flat-square)](https://david-dm.org/multiformats/js-cid)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/feross/standard)\n[![Greenkeeper badge](https://badges.greenkeeper.io/multiformats/js-cid.svg)](https://greenkeeper.io/)\n\n> [CID](https://github.com/multiformats/cid) implementation in JavaScript.\n\n## Lead Maintainer\n\n[Volker Mische](https://github.com/vmx)\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n- [Contribute](#contribute)\n- [License](#license)\n\n## Install\n\n### In Node.js through npm\n\n```bash\n$ npm install --save cids\n```\n\n### Browser: Browserify, Webpack, other bundlers\n\nThe code published to npm that gets loaded on require is in fact an ES5 transpiled version with the right shims added. This means that you can require it and use with your favourite bundler without having to adjust asset management process.\n\n```js\nconst CID = require('cids')\n```\n\n### In the Browser through `<script>` tag\n\nLoading this module through a script tag will make the ```Cids``` obj available in the global namespace.\n\n```\n<script src=\"https://unpkg.com/cids/dist/index.min.js\"></script>\n<!-- OR -->\n<script src=\"https://unpkg.com/cids/dist/index.js\"></script>\n```\n\n#### Gotchas\n\nYou will need to use Node.js `Buffer` API compatible, if you are running inside the browser, you can access it by `multihash.Buffer` or you can install Feross's [Buffer](https://github.com/feross/buffer).\n\n## Usage\n\nBasic usage is quite simple.\n\n```js\nconst CID = require('cids')\n\nconst cid = new CID(1, 'dag-pb', multihash)\n```\n\nIf you have a base encoded string for a multihash you can also create\nan instance from the encoded string.\n\n```js\nconst cid = new CID(base58Multihash)\n```\n\n## API\n\n### CID.isCID(cid)\n\nReturns true if object is a valid CID instance, false if not valid.\n\nIt's important to use this method rather than `instanceof` checks in\norder to handle CID objects from different versions of this module.\n\n### CID.validateCID(cid)\n\nValidates the different components (version, codec, multihash) of the CID\ninstance. Returns true if valid, false if not valid.\n\n### new CID(version, codec, multihash)\n\n`version` must be either 0 or 1.\n\n`codec` must be a string of a valid [registered codec](https://github.com/multiformats/multicodec/blob/master/table.csv).\n\n`multihash` must be a `Buffer` instance of a valid [multihash](https://github.com/multiformats/multihash).\n\n### new CID(baseEncodedString)\n\nAdditionally, you can instantiate an instance from a base encoded\nstring.\n\n### new CID(Buffer)\n\nAdditionally, you can instantiate an instance from a buffer.\n\n#### cid.codec\n\nProperty containing the codec string.\n\n#### cid.version\n\nProperty containing the CID version integer.\n\n#### cid.multihash\n\nProperty containing the multihash buffer.\n\n#### cid.buffer\n\nProperty containing the full CID encoded as a `Buffer`.\n\n#### cid.prefix\n\nProprety containing a buffer of the CID version, codec, and the prefix\nsection of the multihash.\n\n#### cid.toV0()\n\nReturns the CID encoded in version 0. Only works for `dag-pb` codecs.\n\nThrows if codec is not `dag-pb`.\n\n#### cid.toV1()\n\nReturns the CID encoded in version 1.\n\n#### cid.toBaseEncodedString(base='base58btc')\n\nReturns a base encodec string of the CID. Defaults to `base58btc`.\n\n#### cid.equals(cid)\n\nCompare cid instance. Returns true if CID's are identical, false if\notherwise.\n\n## Contribute\n\n[![](https://cdn.rawgit.com/jbenet/contribute-ipfs-gif/master/img/contribute.gif)](https://github.com/ipfs/community/blob/master/contributing.md)\n\nContributions welcome. Please check out [the issues](https://github.com/multiformats/js-cid/issues).\n\nCheck out our [contributing document](https://github.com/ipfs/community/blob/master/contributing.md) for more information on how we work, and about contributing in general. Please be aware that all interactions related to multiformats are subject to the IPFS [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md).\n\nSmall note: If editing the Readme, please conform to the [standard-readme](https://github.com/RichardLitt/standard-readme) specification.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/multiformats/js-cid.git"
  },
  "scripts": {
    "build": "aegir build",
    "coverage": "aegir coverage",
    "docs": "aegir docs",
    "lint": "aegir lint",
    "release": "aegir release --docs",
    "release-major": "aegir release --type major --docs",
    "release-minor": "aegir release --type minor --docs",
    "test": "aegir test",
    "test:browser": "aegir test --target browser",
    "test:node": "aegir test --target node"
  },
  "version": "0.5.7"
}
