{
  "_args": [
    [
      {
        "raw": "multiaddr@^4.0.0",
        "scope": null,
        "escapedName": "multiaddr",
        "name": "multiaddr",
        "rawSpec": "^4.0.0",
        "spec": ">=4.0.0 <5.0.0",
        "type": "range"
      },
      "/Users/sandeepghosh/Desktop/blockchain/smart contracts/dappRoll2Win/dumed/node_modules/peer-info"
    ]
  ],
  "_from": "multiaddr@^4.0.0",
  "_hasShrinkwrap": false,
  "_id": "multiaddr@4.0.0",
  "_location": "/peer-info/multiaddr",
  "_nodeVersion": "9.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/multiaddr_4.0.0_1522940293440_0.09175328516326742"
  },
  "_npmUser": {
    "name": "daviddias",
    "email": "daviddias.p@gmail.com"
  },
  "_npmVersion": "5.8.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "multiaddr@^4.0.0",
    "scope": null,
    "escapedName": "multiaddr",
    "name": "multiaddr",
    "rawSpec": "^4.0.0",
    "spec": ">=4.0.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/peer-info"
  ],
  "_resolved": "https://registry.npmjs.org/multiaddr/-/multiaddr-4.0.0.tgz",
  "_shasum": "70a8857c4f737350bc2c56914a70f1263889db33",
  "_shrinkwrap": null,
  "_spec": "multiaddr@^4.0.0",
  "_where": "/Users/sandeepghosh/Desktop/blockchain/smart contracts/dappRoll2Win/dumed/node_modules/peer-info",
  "author": {
    "name": "Juan Benet",
    "email": "juan@benet.ai",
    "url": "http://juan.benet.ai/"
  },
  "bugs": {
    "url": "https://github.com/multiformats/js-multiaddr/issues"
  },
  "contributors": [
    {
      "name": "Alan Shaw",
      "email": "alan@tableflip.io"
    },
    {
      "name": "David Dias",
      "email": "daviddias.p@gmail.com"
    },
    {
      "name": "Diogo Silva",
      "email": "fsdiogo@gmail.com"
    },
    {
      "name": "Dmitriy Ryajov",
      "email": "dryajov@gmail.com"
    },
    {
      "name": "Friedel Ziegelmayer",
      "email": "dignifiedquire@gmail.com"
    },
    {
      "name": "Juan Batiz-Benet",
      "email": "juan@benet.ai"
    },
    {
      "name": "Lars Gierth",
      "email": "lgierth@users.noreply.github.com"
    },
    {
      "name": "Maciej Krüger",
      "email": "mkg20001@gmail.com"
    },
    {
      "name": "Richard Littauer",
      "email": "richard.littauer@gmail.com"
    },
    {
      "name": "Sid Harder",
      "email": "sideharder@gmail.com"
    },
    {
      "name": "Stephen Whitmore",
      "email": "stephen.whitmore@gmail.com"
    },
    {
      "name": "Trond Arne Bråthen",
      "email": "tabrath@gmail.com"
    },
    {
      "name": "Victor Bjelkholm",
      "email": "victorbjelkholm@gmail.com"
    },
    {
      "name": "Volker Mische",
      "email": "volker.mische@gmail.com"
    },
    {
      "name": "Yahya",
      "email": "ya7yaz@gmail.com"
    },
    {
      "name": "Zane Starr",
      "email": "zcstarr@gmail.com"
    },
    {
      "name": "greenkeeper[bot]",
      "email": "greenkeeper[bot]@users.noreply.github.com"
    },
    {
      "name": "npm-to-cdn-bot",
      "email": "npmcdn-to-unpkg-bot@users.noreply.github.com",
      "url": "by Forbes Lindesay"
    }
  ],
  "dependencies": {
    "bs58": "^4.0.1",
    "class-is": "^1.1.0",
    "ip": "^1.1.5",
    "ip-address": "^5.8.9",
    "lodash.filter": "^4.6.0",
    "lodash.map": "^4.6.0",
    "varint": "^5.0.0",
    "xtend": "^4.0.1"
  },
  "description": "multiaddr implementation (binary + string representation of network addresses)",
  "devDependencies": {
    "aegir": "^13.0.6",
    "buffer-loader": "0.0.1",
    "chai": "^4.1.2",
    "dirty-chai": "^2.0.1",
    "pre-commit": "^1.2.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-zUatrOCfBd/tJNOSoJ10d2EI2FDXB9PyPZhqUMdXE9mOyR3C+HLuOjga2Ga/eChwvEHIpTYRMoIKF2Nv7af2qQ==",
    "shasum": "70a8857c4f737350bc2c56914a70f1263889db33",
    "tarball": "https://registry.npmjs.org/multiaddr/-/multiaddr-4.0.0.tgz",
    "fileCount": 19,
    "unpackedSize": 1377605
  },
  "gitHead": "1291a2fcba32828fb6b7e699d387fba970445baf",
  "homepage": "https://github.com/multiformats/js-multiaddr",
  "keywords": [
    "multiaddr",
    "binary",
    "string"
  ],
  "license": "MIT",
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "daviddias",
      "email": "daviddias.p@gmail.com"
    },
    {
      "name": "vmx",
      "email": "volker.mische@gmail.com"
    }
  ],
  "name": "multiaddr",
  "optionalDependencies": {},
  "pre-commit": [
    "lint",
    "test"
  ],
  "readme": "js-multiaddr\n============\n\n[![](https://img.shields.io/badge/made%20by-Protocol%20Labs-blue.svg?style=flat-square)](http://ipn.io)\n[![](https://img.shields.io/badge/project-multiformats-blue.svg?style=flat-square)](https://github.com/multiformats/multiformats)\n[![](https://img.shields.io/badge/freenode-%23ipfs-blue.svg?style=flat-square)](https://webchat.freenode.net/?channels=%23ipfs)\n[![Coverage Status](https://img.shields.io/coveralls/multiformats/js-multiaddr/master.svg?style=flat-square)](https://coveralls.io/github/multiformats/js-multiaddr?branch=master)\n[![Travis CI](https://img.shields.io/travis/multiformats/js-multiaddr/master.svg?style=flat-square)](https://travis-ci.org/multiformats/js-multiaddr)\n[![Circle CI](https://img.shields.io/circleci/project/github/multiformats/js-multiaddr/master.svg?style=flat-square)](https://circleci.com/gh/multiformats/js-multiaddr)\n[![Dependency Status](https://david-dm.org/multiformats/js-multiaddr.svg?style=flat-square)](https://david-dm.org/multiformats/js-multiaddr)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/feross/standard)\n[![](https://img.shields.io/badge/readme%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/RichardLitt/standard-readme)\n\n> JavaScript implementation of [multiaddr](https://github.com/multiformats/multiaddr).\n\n## Table of Contents\n\n- [Background](#background)\n  - [What is multiaddr?](#what-is-multiaddr)\n- [Install](#install)\n  - [Setup](#setup)\n    - [Node.js](#nodejs)\n    - [Browser: Browserify, Webpack, other bundlers](#browser-browserify-webpack-other-bundlers)\n    - [Browser: `<script>` Tag](#browser-script-tag)\n- [Usage](#usage)\n- [API](#api)\n  - [Create](#create)\n  - [Protocols](#protocols)\n  - [Node-Friendly Addresses](#node-friendly-addresses)\n  - [En/decapsulate](#endecapsulate)\n  - [Tunneling](#tunneling)\n- [Maintainers](#maintainers)\n- [Contribute](#contribute)\n- [License](#license)\n\n## Background\n\n### What is multiaddr?\n\nA standard way to represent addresses that\n\n- support any standard network protocol\n- are self-describing\n- have a binary packed format\n- have a nice string representation\n- encapsulate well\n\n## Install\n\n```sh\nnpm i multiaddr\n```\n\n### Setup\n\n#### Node.js\n\n```js\nconst multiaddr = require('multiaddr')\n```\n\n#### Browser: Browserify, Webpack, other bundlers\n\nThe code published to npm that gets loaded on require is in fact a ES5\ntranspiled version with the right shims added. This means that you can require\nit and use with your favourite bundler without having to adjust asset management\nprocess.\n\n```js\nconst multiaddr = require('multiaddr')\n```\n\n#### Browser: `<script>` Tag\n\nLoading this module through a script tag will make the `Multiaddr` obj available in\nthe global namespace.\n\n```html\n<script src=\"https://unpkg.com/multiaddr/dist/index.min.js\"></script>\n<!-- OR -->\n<script src=\"https://unpkg.com/multiaddr/dist/index.js\"></script>\n```\n\n**NOTE**: You will need access to the Node.js `Buffer` API. If you are running\nin the browser, you can access it with `multiaddr.Buffer` or you can install\n[feross/buffer](https://github.com/feross/buffer).\n\n## Usage\n\n```js\n$ node\n\n> const multiaddr = require('multiaddr')\n\n> const addr = multiaddr(\"/ip4/127.0.0.1/udp/1234\")\n<Multiaddr /ip4/127.0.0.1/udp/1234>\n\n> addr.buffer\n<Buffer 04 7f 00 00 01 11 04 d2>\n\n> addr.toString()\n'/ip4/127.0.0.1/udp/1234'\n\n> addr.protos()\n[\n  {code: 4, name: 'ip4', size: 32},\n  {code: 17, name: 'udp', size: 16}\n]\n\n> addr.nodeAddress()\n{\n  family: \"IPv4\",\n  port: 1234,\n  address: \"127.0.0.1\"\n}\n\n> addr.encapsulate('/sctp/5678')\n<Multiaddr /ip4/127.0.0.1/udp/1234/sctp/5678>\n```\n\n## API\n\nhttps://multiformats.github.io/js-multiaddr/\n\n## Maintainers\n\nCaptain: [@diasdavid](https://github.com/diasdavid).\n\n## Contribute\n\nContributions welcome. Please check out [the issues](https://github.com/multiformats/js-multiaddr/issues).\n\nCheck out our [contributing document](https://github.com/multiformats/multiformats/blob/master/contributing.md) for more information on how we work, and about contributing in general. Please be aware that all interactions related to multiformats are subject to the IPFS [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md).\n\nSmall note: If editing the README, please conform to the [standard-readme](https://github.com/RichardLitt/standard-readme) specification.\n\n## License\n\n[MIT](LICENSE) © 2016 Protocol Labs Inc.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/multiformats/js-multiaddr.git"
  },
  "scripts": {
    "build": "aegir build",
    "coverage": "aegir coverage",
    "coverage-publish": "aegir coverage publish",
    "docs": "aegir docs",
    "lint": "aegir lint",
    "release": "aegir release",
    "release-major": "aegir release --type major",
    "release-minor": "aegir release --type minor",
    "test": "aegir test",
    "test:browser": "aegir test -t browser",
    "test:node": "aegir test -t node"
  },
  "version": "4.0.0"
}
