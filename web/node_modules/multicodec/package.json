{
  "_args": [
    [
      {
        "raw": "multicodec@~0.2.7",
        "scope": null,
        "escapedName": "multicodec",
        "name": "multicodec",
        "rawSpec": "~0.2.7",
        "spec": ">=0.2.7 <0.3.0",
        "type": "range"
      },
      "/Users/sandeepghosh/Desktop/blockchain/smart contracts/dappRoll2Win/dumed/node_modules/cids"
    ]
  ],
  "_from": "multicodec@~0.2.7",
  "_hasShrinkwrap": false,
  "_id": "multicodec@0.2.7",
  "_location": "/multicodec",
  "_nodeVersion": "10.1.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/multicodec_0.2.7_1528300231588_0.32377135520533984"
  },
  "_npmUser": {
    "name": "hacdias",
    "email": "hacdias@gmail.com"
  },
  "_npmVersion": "6.0.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "multicodec@~0.2.7",
    "scope": null,
    "escapedName": "multicodec",
    "name": "multicodec",
    "rawSpec": "~0.2.7",
    "spec": ">=0.2.7 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/cids"
  ],
  "_resolved": "https://registry.npmjs.org/multicodec/-/multicodec-0.2.7.tgz",
  "_shasum": "44dcb902b7ccd8065c4c348fe9987acf14a0679d",
  "_shrinkwrap": null,
  "_spec": "multicodec@~0.2.7",
  "_where": "/Users/sandeepghosh/Desktop/blockchain/smart contracts/dappRoll2Win/dumed/node_modules/cids",
  "bugs": {
    "url": "https://github.com/multiformats/js-multicodec/issues"
  },
  "contributors": [
    {
      "name": "David Dias",
      "email": "daviddias.p@gmail.com"
    },
    {
      "name": "Friedel Ziegelmayer",
      "email": "dignifiedquire@gmail.com"
    },
    {
      "name": "Henrique Dias",
      "email": "hacdias@gmail.com"
    },
    {
      "name": "Richard Littauer",
      "email": "richard.littauer@gmail.com"
    },
    {
      "name": "Volker Mische",
      "email": "volker.mische@gmail.com"
    },
    {
      "name": "kumavis",
      "email": "kumavis@users.noreply.github.com"
    },
    {
      "name": "kumavis",
      "email": "aaron@kumavis.me"
    },
    {
      "name": "wanderer",
      "email": "mjbecze@gmail.com"
    },
    {
      "name": "Łukasz Magiera",
      "email": "magik6k@users.noreply.github.com"
    },
    {
      "name": "ᴠɪᴄᴛᴏʀ ʙᴊᴇʟᴋʜᴏʟᴍ",
      "email": "victorbjelkholm@gmail.com"
    }
  ],
  "dependencies": {
    "varint": "^5.0.0"
  },
  "description": "JavaScript implementation of the multicodec specification",
  "devDependencies": {
    "aegir": "^12.3.0",
    "chai": "^4.1.2",
    "dirty-chai": "^2.0.1",
    "pre-push": "^0.1.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-96xc9zs7bsclMW0Po9ERnRFqcsWHY8OZ8JW/I8DeHG58YYJZy3cBGI00Ze7hz9Ix56DNHMTSxEj9cgoZByruMg==",
    "shasum": "44dcb902b7ccd8065c4c348fe9987acf14a0679d",
    "tarball": "https://registry.npmjs.org/multicodec/-/multicodec-0.2.7.tgz",
    "fileCount": 19,
    "unpackedSize": 573474,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbGALJCRA9TVsSAnZWagAAX2IQAKRG/kf6U5b+j+BDZljr\ne2Xy3RDzlnj4OwxJO2IQ4Ftn0jNHEYyPBwiWEL/JwHcrvm49hTgTjK668Jiw\nB91bv0xl5D+CRcxBtTEYsKMjZkVJkIL77Gxv0JB403/pSISNsOregUMOkXE7\njyFHTMXyoqlFcsA40m/rMkAek2r+TP7xotS0uGoQdMb5W4CYo+XcavNjr1eD\n2sQo9S/FZnTV9X/Bg4eLBYQYB8Okp5R3r/xQHgRnhCFavNwDz35CyJt1BzzX\nAR/rGdoVrkxhUZkmH5rZR08wicgrWwSjPBmglkeYR1QZC6BTV5CZklQtVO6+\njlx5PspKjeRCH+PlBgScsDlIblrfZsS/ONhk0VcSbYTgKsuRLYqBDiUaPUWl\nRUcOpNGUiMmYu7u7DTH8G7/oANzI85vmGEBR/xMEJbw76zs6heFFfctBTDgD\ng584y3IgU/xALnHzL15FBgQkMWmfAK68x0FD2AfS549KFQlq/EWON2+XbFXv\nA7+nktps/AaMjQsDOyTW1K4gLtyBiNiy4WtDzMzCTW6chR7nn+GPpTCPbRkP\nsX6ltoYcmZ4t2dzpNlYAw8fl/3EHmFmIom0NRQfgdX2XediFh11NfH+RC6A5\nVJuoFc/DJ+YNzrvFbUhLNUbQJSaYRJOs9bMB5TUqj9ab3XFVPZ0hRI0GX6aM\nFdAF\r\n=u70c\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "3bb121c73ab2ca4a4cd1102cc0d9d8a398c64e87",
  "homepage": "https://github.com/multiformats/js-multicodec#readme",
  "keywords": [
    "IPFS",
    "multiformats",
    "multicodec",
    "binary",
    "packed",
    "the",
    "data!"
  ],
  "leadMaintainer": "Henrique Dias <hacdias@gmail.com>",
  "license": "MIT",
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "daviddias",
      "email": "mail@daviddias.me"
    },
    {
      "name": "hacdias",
      "email": "hacdias@gmail.com"
    },
    {
      "name": "vmx",
      "email": "volker.mische@gmail.com"
    }
  ],
  "name": "multicodec",
  "optionalDependencies": {},
  "pre-push": [
    "lint",
    "test"
  ],
  "readme": "# js-multicodec\n\n[![](https://img.shields.io/badge/made%20by-Protocol%20Labs-blue.svg?style=flat-square)](http://ipn.io)\n[![](https://img.shields.io/badge/project-multiformats-blue.svg?style=flat-square)](https://github.com/multiformats/multiformats)\n[![](https://img.shields.io/badge/freenode-%23ipfs-blue.svg?style=flat-square)](https://webchat.freenode.net/?channels=%23ipfs)\n[![](https://img.shields.io/badge/readme%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/RichardLitt/standard-readme)\n[![Travis CI](https://img.shields.io/travis/multiformats/js-multicodec.svg?style=flat-square&branch=master)](https://travis-ci.org/multiformats/js-multicodec)\n[![Coverage Status](https://coveralls.io/repos/github/multiformats/js-multicodec/badge.svg?branch=master)](https://coveralls.io/github/multiformats/js-multiformats?branch=master)\n\n> JavaScript implementation of the multicodec specification\n\n## Lead Maintainer\n\n[Henrique Dias](http://github.com/hacdias)\n\n## Table of Contents\n\nTODO™\n\n## Install\n\n```sh\n> npm install multicodec\n```\n\n```JavaScript\nconst multicodec = require('multicodec')\n```\n\n## Usage\n\n### Example\n\n```JavaScript\n\nconst multicodec = require('multicodec')\n\nconst prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\n// prefixedProtobuf 0x50...\n```\n\n## Updating the lookup table\n\nUpdating the lookup table is a manual process. The source of truth is the\n[multicodec default table](https://github.com/multiformats/multicodec/blob/master/table.csv). To make the process easier, there’s an [AWK script in the tools directory](tools/update-table.awk) that does a basic conversion of the default table. The result can’t be used as-is, but serves as a template for manual diffing. The workflow is:\n\n - Create a basic draft version\n\n    curl -X GET https://raw.githubusercontent.com/multiformats/multicodec/master/table.csv|awk -f tools/update-table.awk > /tmp/draft.js\n\n - Diff it with your tool of choice (e.g. [Meld](http://meldmerge.org/)) and apply the changes\n\n     meld /tmp/draft.js base-table.js\n\n## API\n\nhttps://multiformats.github.io/js-multicodec/\n\n## [multicodec default table](https://github.com/multiformats/multicodec/blob/master/table.csv)\n\n## Contribute\n\nContributions welcome. Please check out [the issues](https://github.com/multiformats/js-multicodec/issues).\n\nCheck out our [contributing document](https://github.com/multiformats/multiformats/blob/master/contributing.md) for more information on how we work, and about contributing in general. Please be aware that all interactions related to multiformats are subject to the IPFS [Code of Conduct](https://github.com/ipfs/community/blob/master/code-of-conduct.md).\n\nSmall note: If editing the README, please conform to the [standard-readme](https://github.com/RichardLitt/standard-readme) specification.\n\n## License\n\n[MIT](LICENSE) © 2016 Protocol Labs Inc.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/multiformats/js-multicodec.git"
  },
  "scripts": {
    "build": "aegir build",
    "coverage": "aegir coverage",
    "coverage-publish": "aegir coverage --provider coveralls",
    "docs": "aegir docs",
    "lint": "aegir lint",
    "release": "aegir release",
    "release-major": "aegir release --type major",
    "release-minor": "aegir release --type minor",
    "test": "aegir test",
    "test:browser": "aegir test --target browser",
    "test:node": "aegir test --target node"
  },
  "version": "0.2.7"
}
