{
  "_args": [
    [
      {
        "raw": "is-ipfs@~0.4.7",
        "scope": null,
        "escapedName": "is-ipfs",
        "name": "is-ipfs",
        "rawSpec": "~0.4.7",
        "spec": ">=0.4.7 <0.5.0",
        "type": "range"
      },
      "/Users/sandeepghosh/Desktop/blockchain/smart contracts/dappRoll2Win/dumed/node_modules/ipfs-api"
    ]
  ],
  "_from": "is-ipfs@~0.4.7",
  "_hasShrinkwrap": false,
  "_id": "is-ipfs@0.4.8",
  "_location": "/is-ipfs",
  "_nodeVersion": "8.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/is-ipfs_0.4.8_1542967432721_0.23954160399435231"
  },
  "_npmUser": {
    "name": "lidel",
    "email": "lidel@lidel.org"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {
    "safe-buffer": "5.1.2"
  },
  "_requested": {
    "raw": "is-ipfs@~0.4.7",
    "scope": null,
    "escapedName": "is-ipfs",
    "name": "is-ipfs",
    "rawSpec": "~0.4.7",
    "spec": ">=0.4.7 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ipfs-api",
    "/ipld-dag-pb"
  ],
  "_resolved": "https://registry.npmjs.org/is-ipfs/-/is-ipfs-0.4.8.tgz",
  "_shasum": "ea229aef6230433ad1e8df930c49c5e773422c3f",
  "_shrinkwrap": null,
  "_spec": "is-ipfs@~0.4.7",
  "_where": "/Users/sandeepghosh/Desktop/blockchain/smart contracts/dappRoll2Win/dumed/node_modules/ipfs-api",
  "author": {
    "name": "Francisco Dias",
    "email": "francisco@baiodias.com",
    "url": "http://franciscodias.net/"
  },
  "browser": {
    "fs": false
  },
  "bugs": {
    "url": "https://github.com/ipfs/is-ipfs/issues"
  },
  "contributors": [
    {
      "name": "Alan Shaw",
      "email": "alan.shaw@protocol.ai"
    },
    {
      "name": "David Dias",
      "email": "daviddias.p@gmail.com"
    },
    {
      "name": "Francisco Baio Dias",
      "email": "xicombd@gmail.com"
    },
    {
      "name": "Henrique Dias",
      "email": "hacdias@gmail.com"
    },
    {
      "name": "Marcin Rataj",
      "email": "lidel@lidel.org"
    },
    {
      "name": "nginnever",
      "email": "ginneversource@gmail.com"
    }
  ],
  "dependencies": {
    "bs58": "4.0.1",
    "cids": "~0.5.6",
    "multibase": "~0.6.0",
    "multihashes": "~0.4.13"
  },
  "description": "A set of utilities to help identify IPFS resources",
  "devDependencies": {
    "aegir": "15.0.1",
    "chai": "4.1.2",
    "pre-commit": "1.2.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-xIKUeA24IFMfkmeAPEOZL448X7a08c/KzAGQp1e/QxC9bx/NNEdT/ohob3SW6eJO2UwJNjsbfMeNZ2B+Dk2Fdg==",
    "shasum": "ea229aef6230433ad1e8df930c49c5e773422c3f",
    "tarball": "https://registry.npmjs.org/is-ipfs/-/is-ipfs-0.4.8.tgz",
    "fileCount": 12,
    "unpackedSize": 756800,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb99CJCRA9TVsSAnZWagAAq1gP/0oCvefUKFh2v6JpFXZt\nY+hjlBwBBAAvPTHoAj84zi5jDT5MITGxkBVVqIzrBcj14R4Af9CLeBWVgVq+\ndJvmxiOiZlDUmpSfYWmZGGrjNDrKYegMnDlrdxAhzuwTRFZYCYo7T+WsMmPb\nxVk2td6W8W69yEGk+aHRUOAfIKCHJJi6s64BjzVPsHw1n8NVSaEqhou1SKBh\n8sucCps/YM1v8ZBJONOZzlD9+ges+Pb9SgvrO1wvyvOHHex65dWntaxbcvvb\njtk2hSKxoJZdo7JdEj9fI8Q7OIzYd6qT6YO0uotRgMG95YpTRHD4ePVL8A0u\nBd0EipSmblxLj2CdQyaeXljN0R7WX+gPOYHWHiA/RPyu15CjUsKY54F6zvxJ\n7aVcGH0yb+YV+xU5CRHm0A4Ko+YLw0pkBHw72jZrh5kYSQNrDyRGOAmYyrbm\nXwvHi3mx82LnZH+5mwRdPThp2EdPMdNjWms4Q3DbuOsvX/0hRAKYIvt6L7FV\nRczqGcHEyCjgXeOlczFFtmJbzRWrGzY0vmeaxf4pS7btYI7sbTSDTk3KChNP\nBkZzwN3vwBQT3EnzU6rsr51QQSueXJy2REKv3l5khxg9L92f3CZfh73oQBRt\nNxyL3uqn2vUyHW4imuAtS8nl1tjlJYejOlmFvEPysppjShvfVTKIlbImpZ2E\nyuAb\r\n=JLvc\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "8804b66fd3972ac7a790f0a1a2a4a3e1f74a2b79",
  "homepage": "https://github.com/ipfs/is-ipfs",
  "keywords": [
    "js-ipfs",
    "ipfs"
  ],
  "leadMaintainer": "Marcin Rataj <lidel@lidel.org>",
  "license": "MIT",
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "daviddias",
      "email": "daviddias.p@gmail.com"
    },
    {
      "name": "xicombd",
      "email": "xicombd@gmail.com"
    }
  ],
  "name": "is-ipfs",
  "optionalDependencies": {},
  "pre-commit": [
    "test",
    "lint"
  ],
  "readme": "is-ipfs\n====\n\n[![](https://img.shields.io/github/release/ipfs/is-ipfs.svg)](https://github.com/ipfs/is-ipfs/releases/latest)\n[![](https://img.shields.io/badge/freenode-%23ipfs-blue.svg?style=flat-square)](https://webchat.freenode.net/?channels=%23ipfs)\n\n> A set of utilities to help identify [IPFS](https://ipfs.io/) resources\n\n## Lead Maintainer\n\n[Marcin Rataj](https://github.com/lidel)\n\n# Install\n\n### In Node.js through npm\n\n```bash\n$ npm install --save is-ipfs\n```\n\n### Browser: Browserify, Webpack, other bundlers\n\nThe code published to npm that gets loaded on require is in fact an ES5 transpiled version with the right shims added. This means that you can require it and use with your favorite bundler without having to adjust asset management process.\n\n```js\nvar is-ipfs = require('is-ipfs')\n```\n\n\n### In the Browser through `<script>` tag\n\nLoading this module through a script tag will make the ```IsIpfs``` obj available in the global namespace.\n\n```\n<script src=\"https://unpkg.com/is-ipfs/dist/index.min.js\"></script>\n<!-- OR -->\n<script src=\"https://unpkg.com/is-ipfs/dist/index.js\"></script>\n```\n\n# Usage\n```javascript\nconst isIPFS = require('is-ipfs')\n\nisIPFS.multihash('QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // true\nisIPFS.multihash('noop') // false\n\nisIPFS.cid('QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // true (CIDv0)\nisIPFS.cid('zdj7WWeQ43G6JJvLWQWZpyHuAMq6uYWRjkBXFad11vE2LHhQ7') // true (CIDv1)\nisIPFS.cid('noop') // false\n\nisIPFS.base32cid('bafybeie5gq4jxvzmsym6hjlwxej4rwdoxt7wadqvmmwbqi7r27fclha2va') // true\nisIPFS.base32cid('QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // false\n\nisIPFS.url('https://ipfs.io/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // true\nisIPFS.url('https://ipfs.io/ipns/github.com') // true\nisIPFS.url('https://github.com/ipfs/js-ipfs/blob/master/README.md') // false\nisIPFS.url('https://google.com') // false\n\nisIPFS.path('/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // true\nisIPFS.path('/ipns/github.com') // true\nisIPFS.path('/ipfs/js-ipfs/blob/master/README.md') // false\n\nisIPFS.urlOrPath('https://ipfs.io/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // true\nisIPFS.urlOrPath('https://ipfs.io/ipns/github.com') // true\nisIPFS.urlOrPath('/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // true\nisIPFS.urlOrPath('/ipns/github.com') // true\nisIPFS.urlOrPath('https://google.com') // false\n\nisIPFS.ipfsUrl('https://ipfs.io/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // true\nisIPFS.ipfsUrl('https://ipfs.io/ipfs/invalid-hash') // false\n\nisIPFS.ipnsUrl('https://ipfs.io/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // false\nisIPFS.ipnsUrl('https://ipfs.io/ipns/github.com') // true\n\nisIPFS.ipfsPath('/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // true\nisIPFS.ipfsPath('/ipfs/invalid-hash') // false\n\nisIPFS.ipnsPath('/ipfs/QmYjtig7VJQ6XsnUjqqJvj7QaMcCAwtrgNdahSiFofrE7o') // false\nisIPFS.ipnsPath('/ipns/github.com') // true\n\nisIPFS.subdomain('http://bafybeie5gq4jxvzmsym6hjlwxej4rwdoxt7wadqvmmwbqi7r27fclha2va.ipfs.dweb.link') // true\nisIPFS.subdomain('http://bafybeiabc2xofh6tdi6vutusorpumwcikw3hf3st4ecjugo6j52f6xwc6q.ipns.dweb.link') // true\nisIPFS.subdomain('http://www.bafybeie5gq4jxvzmsym6hjlwxej4rwdoxt7wadqvmmwbqi7r27fclha2va.ipfs.dweb.link') // false\nisIPFS.subdomain('http://bafybeie5gq4jxvzmsym6hjlwxej4rwdoxt7wadqvmmwbqi7r27fclha2va.dweb.link') // false\n\nisIPFS.ipfsSubdomain('http://bafybeie5gq4jxvzmsym6hjlwxej4rwdoxt7wadqvmmwbqi7r27fclha2va.ipfs.dweb.link') // true\nisIPFS.ipfsSubdomain('http://bafybeie5gq4jxvzmsym6hjlwxej4rwdoxt7wadqvmmwbqi7r27fclha2va.dweb.link') // false\n\nisIPFS.ipnsSubdomain('http://bafybeiabc2xofh6tdi6vutusorpumwcikw3hf3st4ecjugo6j52f6xwc6q.ipns.dweb.link') // true\nisIPFS.ipnsSubdomain('http://bafybeiabc2xofh6tdi6vutusorpumwcikw3hf3st4ecjugo6j52f6xwc6q.dweb.link') // false\nisIPFS.ipnsSubdomain('http://QmcNioXSC1bfJj1dcFErhUfyjFzoX2HodkRccsFFVJJvg8.ipns.dweb.link') // false\nisIPFS.ipnsSubdomain('http://foo-bar.ipns.dweb.link') // false (not a PeerID)\n```\n\n# API\n\nA suite of util methods that provides efficient validation.\n\nDetection of IPFS Paths and identifiers in URLs is a two-stage process:\n1.  `urlPattern`/`pathPattern`/`subdomainPattern` regex is applied to quickly identify potential candidates\n2.  proper CID validation is applied to remove false-positives\n\n\n## Utils\n\n### `isIPFS.multihash(hash)`\n\nReturns `true` if the provided string is a valid `multihash` or `false` otherwise.\n\n### `isIPFS.cid(hash)`\n\nReturns `true` if the provided string is a valid `CID` or `false` otherwise.\n\n### `isIPFS.base32cid(hash)`\n\nReturns `true` if the provided string is a valid `CID` in Base32 encoding or `false` otherwise.\n\n## URLs\n\n### `isIPFS.url(url)`\n\nReturns `true` if the provided string is a valid IPFS or IPNS url or `false` otherwise.\n\n### `isIPFS.ipfsUrl(url)`\n\nReturns `true` if the provided string is a valid IPFS url or `false` otherwise.\n\n### `isIPFS.ipnsUrl(url)`\n\nReturns `true` if the provided string is a valid IPNS url or `false` otherwise.\n\n## Paths\n\nStandalone validation of IPFS Paths: `/ip(f|n)s/<cid>/..`\n\n### `isIPFS.path(path)`\n\nReturns `true` if the provided string is a valid IPFS or IPNS path or `false` otherwise.\n\n### `isIPFS.urlOrPath(path)`\n\nReturns `true` if the provided string is a valid IPFS or IPNS url or path or `false` otherwise.\n\n\n### `isIPFS.ipfsPath(path)`\n\nReturns `true` if the provided string is a valid IPFS path or `false` otherwise.\n\n### `isIPFS.ipnsPath(path)`\n\nReturns `true` if the provided string is a valid IPNS path or `false` otherwise.\n\n## Subdomains\n\nValidated subdomain convention: `cidv1b32.ip(f|n)s.domain.tld`\n\n### `isIPFS.subdomain(url)`\n\nReturns `true` if the provided string includes a valid IPFS or IPNS subdomain or `false` otherwise.\n\n### `isIPFS.ipfsSubdomain(url)`\n\nReturns `true` if the provided string includes a valid IPFS subdomain or `false` otherwise.\n\n### `isIPFS.ipnsSubdomain(url)`\n\nReturns `true` if the provided string includes a valid IPNS subdomain or `false` otherwise.\n\n\n# License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ipfs/is-ipfs.git"
  },
  "scripts": {
    "build": "aegir build",
    "coverage": "aegir coverage",
    "coverage-publish": "aegir coverage --upload",
    "lint": "aegir lint",
    "release": "aegir release",
    "release-major": "aegir release --type major",
    "release-minor": "aegir release --type minor",
    "test": "aegir test",
    "test:browser": "aegir test --target browser",
    "test:node": "aegir test --target node"
  },
  "version": "0.4.8"
}
